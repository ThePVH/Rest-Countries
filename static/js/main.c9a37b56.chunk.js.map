{"version":3,"sources":["AppBarComponent.js","SearchField.js","FilterField.js","Cards.js","Card.js","App.js","index.js"],"names":["useStyles","makeStyles","root","display","flexDirection","justifyContent","alignItems","height","padding","AppBarComponent","props","classes","AppBar","position","Typography","variant","className","onClick","handleMode","SearchField","Search","InputBase","placeholder","onChange","handleInput","useStyle","width","border","FilterField","Autocomplete","id","options","getOptionLabel","option","onInputChange","handleFilter","renderInput","params","TextField","label","Cards","to","alpha3Code","src","img","alt","name","population","region","capital","Card","flag","nativeName","subregion","topLevelDomain","currencies","languages","borders","style","maxWidth","map","currency","index","key","language","marginTop","getBackground","light","dark","getElements","getText","getShadow","GlobalStyles","createGlobalStyle","getInitialTheme","savedTheme","storage","getItem","JSON","parse","mode","App","styles","useState","data","setData","query","setQuery","filterRegion","setFilterRegion","theme","setTheme","BASE_URL","a","fetch","json","then","res","useEffect","fetchData","setItem","stringify","exact","path","Toolbar","event","target","value","toLowerCase","e","innerText","filter","country","includes","info","render","match","find","infoName","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.c9a37b56.chunk.js","sourcesContent":["import React from 'react';\r\nimport { AppBar, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        height: '60px',\r\n        padding: '0 60px'\r\n    }\r\n})\r\n\r\nexport const AppBarComponent = (props) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <AppBar position=\"static\" classes={{ root: classes.root }}>\r\n            <Typography variant='h6' className=\"title>\">Where in the world?</Typography>\r\n            <div className=\"mode\">\r\n                <Typography onClick={props.handleMode}>Dark Mode</Typography>\r\n            </div>\r\n        </AppBar>\r\n    )\r\n}","import React from 'react';\r\nimport { InputBase } from '@material-ui/core';\r\nimport { Search as SearchIcon } from \"@material-ui/icons\";\r\n\r\nexport const SearchField = (props) => {\r\n\r\n    return (\r\n        <div className=\"search\">\r\n            <div>\r\n                <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n                className=\"inputBase\"\r\n                placeholder=\"Search for a country...\"\r\n                onChange={props.handleInput}\r\n            />\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { TextField } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyle = makeStyles({\r\n    root: {\r\n        width: '300px',\r\n        border: '0',\r\n    }\r\n})\r\n\r\nexport const FilterField = (props) => {\r\n\r\n    const classes = useStyle();\r\n    const regions = [\"Africa\", \"Americas\", \"Asia\", \"Europe\", \"Oceania\"]\r\n    return (\r\n        <Autocomplete\r\n            id=\"filter-field\"\r\n            options={regions}\r\n            getOptionLabel={option => option}\r\n            classes={{ root: classes.root }}\r\n            onInputChange={props.handleFilter}\r\n            renderInput={params => <TextField {...params} label=\"Filter by Region\" variant=\"outlined\" />}\r\n        />\r\n    )\r\n};\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const Cards = (props) => {\r\n    return (\r\n        <div className='cards'>\r\n            <Link to={`${props.alpha3Code}`}>\r\n                <img src={props.img} alt=\"Country Flag\" />\r\n                <div className='cards-info'>\r\n                    <h2>{props.name}</h2>\r\n                    <p><b>Population:</b> {props.population}</p>\r\n                    <p><b>Region:</b> {props.region}</p>\r\n                    <p><b>Capital:</b> {props.capital}</p>\r\n                </div>\r\n            </Link>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const Card = ({ name, flag, nativeName, population, region, subregion, capital, topLevelDomain, currencies, languages, borders }) => {\r\n\r\n    return (\r\n        <div className=\"cardList\">\r\n            <Link to=\"/\"><button className=\"backBtn\">Back</button></Link>\r\n            <div className=\"card\">\r\n                <div className=\"flag\">\r\n                    <img src={flag} alt=\"flag\" style={{ maxWidth: '500px' }} />\r\n                </div>\r\n                <div className=\"info\">\r\n                    <h2>{name}</h2>\r\n                    <div className=\"stats\">\r\n                        <p><b>Native Name:</b> {nativeName}</p>\r\n                        <p><b>Population:</b> {population}</p>\r\n                        <p><b>Region:</b> {region}</p>\r\n                        <p><b>Sub Region:</b> {subregion}</p>\r\n                        <p><b>Capital:</b> {capital}</p>\r\n                        <p><b>Top Level Domain:</b> {topLevelDomain}</p>\r\n                        <div className=\"currencies\"><b>Currencies:</b> {currencies && (\r\n                            <>{currencies.map((currency, index) => <p key={index}>{currency.name}</p>)}</>\r\n                        )} </div>\r\n                        <div className=\"languages\"><b>Languages:</b> {languages && (\r\n                            <>{languages.map((language, index) => <p key={index}>{language.name}</p>)}</>\r\n                        )}</div>\r\n                    </div>\r\n                    <div className=\"btn-section\">\r\n                        <p><b>Border Countries:</b></p>\r\n                        {borders && (\r\n                            <>{borders.map((border, index) => (<Link to={border}><button key={index}>{border}</button></Link>))}</>)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport './App.css';\nimport { AppBarComponent } from './AppBarComponent';\nimport { SearchField } from './SearchField';\nimport { FilterField } from './FilterField';\nimport { Cards } from './Cards';\n\nimport { Toolbar } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Card } from './Card';\n\nimport { ThemeProvider, createGlobalStyle } from 'styled-components';\nimport storage from 'local-storage-fallback';\nimport style from 'styled-theming';\n\nconst useStyle = makeStyles({\n  root: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginTop: '15px',\n    padding: '0 60px'\n  }\n})\n\n// Styling - move to another component\n\nconst getBackground = style('mode', {\n  light: 'hsl(0, 0%, 98%)',\n  dark: 'hsl(207, 26%, 17%)'\n})\n\nconst getElements = style('mode', {\n  light: 'hsl(0, 0%, 100%)',\n  dark: 'hsl(209, 23%, 22%)'\n})\n\nconst getText = style('mode', {\n  light: 'hsl(200, 15%, 8%)',\n  dark: 'hsl(0, 0%, 100%)'\n})\n\nconst getShadow = style('mode', {\n  light: 'hsl(0, 0%, 52%)',\n  dark: 'hsl(209, 23%, 22%)'\n})\n\nconst GlobalStyles = createGlobalStyle`\nbody {\n  background-color: ${getBackground};\n  color: ${getText};\n}\n\n.cards, .makeStyles-root-2, .MuiAutocomplete-inputRoot {\n  background-color: ${getElements};\n  color: ${getText};\n}\n\na, .MuiInputLabel-outlined, .MuiFormLabel-root.Mui-focused, .MuiInputLabel-outlined {\n  color: ${getText};\n}\n\n.cardList button {\n  background: ${getElements};\n  color: ${getText};\n  box-shadow: 0 0 10px 0 ${getShadow};\n}\n\n.inputBase {\n  color: ${getText};\n}\n\n.search {\n  background-color: ${getElements};\n  box-shadow: 0 0 10px 0 ${getShadow};\n}\n`\n// Saving Theme - to another component\n\nfunction getInitialTheme() {\n  const savedTheme = storage.getItem('theme');\n  return savedTheme ? JSON.parse(savedTheme) : { mode: 'light' };\n}\n\nfunction App() {\n\n  const styles = useStyle();\n  const [data, setData] = useState([]);\n  const [query, setQuery] = useState(\"\");\n  const [filterRegion, setFilterRegion] = useState(\"\");\n  const [theme, setTheme] = useState(getInitialTheme);\n  const BASE_URL = 'https://restcountries.eu/rest/v2/all';\n\n  // Fetching Data from RestCountries\n  async function fetchData() {\n    const res = await fetch(BASE_URL);\n    res\n      .json()\n      .then(res => setData(res));\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, [])\n\n  // Saving theme when theme is changed.\n  useEffect(() => {\n    storage.setItem('theme', JSON.stringify(theme))\n  }, [theme])\n\n  // Handle Search Field input\n  const handleInput = (event) => {\n    setQuery(event.target.value.toLowerCase());\n  }\n\n  // Handle Filter\n  const handleFilter = (e) => {\n    setFilterRegion(e.target.innerText);\n  }\n\n  // Handle Dark Mode\n  const handleMode = () => {\n    setTheme(theme.mode === 'dark' ? { mode: 'light' } : { mode: 'dark' });\n  }\n\n  // Handle Filter with Input together\n  const filterFinal = () => {\n    if (filterRegion && query) {\n      return data.filter(country => country.region === filterRegion).filter(country => country.name.toLowerCase().includes(query));\n    }\n    if (filterRegion) {\n      return data.filter(country => country.region === filterRegion);\n    }\n    if (query) {\n      return data.filter(country => country.name.toLowerCase().includes(query));\n    } else {\n      return data;\n    }\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <>\n        <GlobalStyles />\n        <Router>\n          <div className=\"App\">\n            <AppBarComponent handleMode={handleMode} />\n            <Switch>\n              <Route exact path=\"/\">\n                <Toolbar classes={{ root: styles.root }}>\n                  <SearchField handleInput={handleInput} />\n                  <FilterField handleFilter={handleFilter} />\n                </Toolbar>\n                <div className=\"cardsApp\">\n                  {filterFinal(data).map((info) => (\n                    <Cards\n                      key={info.name}\n                      name={info.name}\n                      img={info.flag}\n                      population={info.population}\n                      region={info.region}\n                      capital={info.capital}\n                      alpha3Code={info.alpha3Code}\n                    />\n                  ))\n                  }\n                </div>\n              </Route>\n              {data && (\n                <Route path=\"/:infoName\" render={({ match }) => (\n                  <Card {...data.find(info => info.alpha3Code === match.params.infoName)} />\n                )} />\n              )}\n            </Switch>\n          </div>\n        </Router>\n      </>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}